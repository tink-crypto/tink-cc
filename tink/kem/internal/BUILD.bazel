package(default_visibility = ["//:__subpackages__"])

licenses(["notice"])

cc_library(
    name = "raw_kem_decapsulate",
    hdrs = ["raw_kem_decapsulate.h"],
    include_prefix = "tink/kem/internal",
    deps = [
        "//tink:restricted_data",
        "//tink/util:statusor",
        "@com_google_absl//absl/strings:string_view",
    ],
)

cc_library(
    name = "raw_kem_encapsulate",
    hdrs = ["raw_kem_encapsulate.h"],
    include_prefix = "tink/kem/internal",
    deps = [
        "//tink:restricted_data",
        "//tink/util:statusor",
    ],
)

cc_library(
    name = "kem_decapsulate_wrapper",
    srcs = ["kem_decapsulate_wrapper.cc"],
    hdrs = ["kem_decapsulate_wrapper.h"],
    include_prefix = "tink/kem/internal",
    deps = [
        "//proto:tink_cc_proto",
        "//tink:crypto_format",
        "//tink:keyset_handle",
        "//tink:primitive_set",
        "//tink:primitive_wrapper",
        "//tink/internal:monitoring",
        "//tink/internal:monitoring_util",
        "//tink/internal:registry_impl",
        "//tink/kem:kem_decapsulate",
        "//tink/util:status",
        "//tink/util:statusor",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:string_view",
    ],
)

cc_test(
    name = "kem_decapsulate_wrapper_test",
    srcs = ["kem_decapsulate_wrapper_test.cc"],
    deps = [
        ":kem_decapsulate_wrapper",
        ":kem_encapsulate_wrapper",
        "//tink:aead",
        "//tink:keyset_handle",
        "//tink:primitive_set",
        "//tink:registry",
        "//tink/aead:aead_config",
        "//tink/aead:aes_gcm_parameters",
        "//tink/config:global_registry",
        "//tink/experimental/pqcrypto/kem:ml_kem_parameters",
        "//tink/experimental/pqcrypto/kem:ml_kem_private_key",
        "//tink/experimental/pqcrypto/kem/internal:ml_kem_decapsulate_aes_gcm",
        "//tink/experimental/pqcrypto/kem/internal:ml_kem_encapsulate_aes_gcm",
        "//tink/experimental/pqcrypto/kem/internal:ml_kem_test_util",
        "//tink/internal:monitoring",
        "//tink/internal:monitoring_client_mocks",
        "//tink/internal:registry_impl",
        "//tink/kem:kem_decapsulate",
        "//tink/kem:kem_encapsulate",
        "//tink/util:statusor",
        "//tink/util:test_matchers",
        "//tink/util:test_util",
        "@boringssl//:crypto",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "kem_encapsulate_wrapper",
    srcs = ["kem_encapsulate_wrapper.cc"],
    hdrs = ["kem_encapsulate_wrapper.h"],
    include_prefix = "tink/kem/internal",
    deps = [
        "//proto:tink_cc_proto",
        "//tink:primitive_set",
        "//tink:primitive_wrapper",
        "//tink/internal:monitoring",
        "//tink/internal:monitoring_util",
        "//tink/internal:registry_impl",
        "//tink/kem:kem_encapsulate",
        "//tink/util:status",
        "//tink/util:statusor",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings:string_view",
    ],
)

cc_test(
    name = "kem_encapsulate_wrapper_test",
    srcs = ["kem_encapsulate_wrapper_test.cc"],
    deps = [
        ":kem_encapsulate_wrapper",
        "//tink:primitive_set",
        "//tink:registry",
        "//tink/aead:aead_config",
        "//tink/aead:aes_gcm_parameters",
        "//tink/experimental/pqcrypto/kem:ml_kem_parameters",
        "//tink/experimental/pqcrypto/kem:ml_kem_private_key",
        "//tink/experimental/pqcrypto/kem/internal:ml_kem_encapsulate_aes_gcm",
        "//tink/experimental/pqcrypto/kem/internal:ml_kem_test_util",
        "//tink/internal:monitoring",
        "//tink/internal:monitoring_client_mocks",
        "//tink/internal:registry_impl",
        "//tink/kem:kem_encapsulate",
        "//tink/util:statusor",
        "//tink/util:test_matchers",
        "@boringssl//:crypto",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/types:optional",
        "@googletest//:gtest_main",
    ],
)
