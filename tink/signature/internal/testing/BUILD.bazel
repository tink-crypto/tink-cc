package(
    default_testonly = 1,
    default_visibility = ["//:__subpackages__"],
)

licenses(["notice"])

cc_library(
    name = "rsa_ssa_pkcs1_test_vectors",
    testonly = 1,
    srcs = ["rsa_ssa_pkcs1_test_vectors.cc"],
    hdrs = ["rsa_ssa_pkcs1_test_vectors.h"],
    include_prefix = "tink/signature/internal/testing",
    deps = [
        ":signature_test_vector",
        "//tink:big_integer",
        "//tink:insecure_secret_key_access",
        "//tink:partial_key_access",
        "//tink:restricted_big_integer",
        "//tink/signature:rsa_ssa_pkcs1_parameters",
        "//tink/signature:rsa_ssa_pkcs1_private_key",
        "//tink/signature:rsa_ssa_pkcs1_public_key",
        "//tink/util:statusor",
        "//tink/util:test_util",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
    ],
)

cc_library(
    name = "signature_test_vector",
    testonly = 1,
    hdrs = ["signature_test_vector.h"],
    include_prefix = "tink/signature/internal/testing",
    deps = [
        "//tink/signature:signature_private_key",
        "@com_google_absl//absl/strings:string_view",
    ],
)

cc_library(
    name = "rsa_ssa_pss_test_vectors",
    testonly = 1,
    srcs = ["rsa_ssa_pss_test_vectors.cc"],
    hdrs = ["rsa_ssa_pss_test_vectors.h"],
    include_prefix = "tink/signature/internal/testing",
    deps = [
        ":signature_test_vector",
        "//tink:big_integer",
        "//tink:insecure_secret_key_access",
        "//tink:partial_key_access",
        "//tink:restricted_big_integer",
        "//tink/signature:rsa_ssa_pss_parameters",
        "//tink/signature:rsa_ssa_pss_private_key",
        "//tink/signature:rsa_ssa_pss_public_key",
        "//tink/util:statusor",
        "//tink/util:test_util",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
    ],
)

cc_library(
    name = "ed25519_test_vectors",
    testonly = 1,
    srcs = ["ed25519_test_vectors.cc"],
    hdrs = ["ed25519_test_vectors.h"],
    include_prefix = "tink/signature/internal/testing",
    deps = [
        ":signature_test_vector",
        "//tink:insecure_secret_key_access",
        "//tink:partial_key_access",
        "//tink:restricted_data",
        "//tink/signature:ed25519_parameters",
        "//tink/signature:ed25519_private_key",
        "//tink/signature:ed25519_public_key",
        "//tink/util:statusor",
        "//tink/util:test_util",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:string_view",
        "@com_google_absl//absl/types:optional",
    ],
)

cc_library(
    name = "ecdsa_test_vectors",
    testonly = 1,
    srcs = ["ecdsa_test_vectors.cc"],
    hdrs = ["ecdsa_test_vectors.h"],
    include_prefix = "tink/signature/internal/testing",
    deps = [
        ":signature_test_vector",
        "//tink:big_integer",
        "//tink:ec_point",
        "//tink:insecure_secret_key_access",
        "//tink:partial_key_access",
        "//tink:restricted_big_integer",
        "//tink/signature:ecdsa_parameters",
        "//tink/signature:ecdsa_private_key",
        "//tink/signature:ecdsa_public_key",
        "//tink/util:secret_data",
        "//tink/util:statusor",
        "//tink/util:test_util",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
    ],
)

cc_library(
    name = "ml_dsa_test_vectors",
    testonly = 1,
    srcs = ["ml_dsa_test_vectors.cc"],
    hdrs = ["ml_dsa_test_vectors.h"],
    include_prefix = "tink/signature/internal/testing",
    deps = [
        ":signature_test_vector",
        "//tink:insecure_secret_key_access",
        "//tink:partial_key_access",
        "//tink:restricted_data",
        "//tink/signature:ml_dsa_parameters",
        "//tink/signature:ml_dsa_private_key",
        "//tink/signature:ml_dsa_public_key",
        "//tink/util:statusor",
        "//tink/util:test_util",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
    ],
)
