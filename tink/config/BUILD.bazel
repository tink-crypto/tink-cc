load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")

package(default_visibility = ["//:__subpackages__"])

licenses(["notice"])

cc_library(
    name = "tink_config",
    srcs = ["tink_config.cc"],
    hdrs = ["tink_config.h"],
    include_prefix = "tink/config",
    visibility = ["//visibility:public"],
    deps = [
        "//proto:config_cc_proto",
        "//tink:key_manager",
        "//tink:registry",
        "//tink/daead:deterministic_aead_config",
        "//tink/hybrid:hybrid_config",
        "//tink/prf:prf_config",
        "//tink/signature:signature_config",
        "//tink/streamingaead:streaming_aead_config",
        "//tink/util:status",
        "@com_google_absl//absl/base:core_headers",
    ],
)

cc_library(
    name = "config_util",
    srcs = ["config_util.cc"],
    hdrs = ["config_util.h"],
    include_prefix = "tink/config",
    deps = ["//proto:config_cc_proto"],
)

bool_flag(
    name = "use_only_fips",
    build_setting_default = False,
)

cc_library(
    name = "tink_fips",
    srcs = ["tink_fips.cc"],
    hdrs = ["tink_fips.h"],
    include_prefix = "tink/config",
    visibility = ["//visibility:public"],
    deps = [
        "//tink/internal:fips_utils",
        "//tink/internal:registry_impl",
        "//tink/util:status",
        "@boringssl//:crypto",
        "@com_google_absl//absl/base:core_headers",
    ],
)

cc_library(
    name = "global_registry",
    srcs = ["global_registry.cc"],
    hdrs = ["global_registry.h"],
    include_prefix = "tink/config",
    visibility = ["//visibility:public"],
    deps = [
        "//tink:configuration",
        "//tink:key_gen_configuration",
        "//tink/internal:configuration_impl",
        "//tink/internal:key_gen_configuration_impl",
        "@com_google_absl//absl/log:absl_check",
    ],
)

cc_library(
    name = "fips_140_2",
    srcs = ["fips_140_2.cc"],
    hdrs = ["fips_140_2.h"],
    include_prefix = "tink/config",
    visibility = ["//visibility:public"],
    deps = [
        "//tink:configuration",
        "//tink/aead:aead_wrapper",
        "//tink/aead:aes_ctr_hmac_aead_key_manager",
        "//tink/aead:aes_gcm_key_manager",
        "//tink/internal:configuration_impl",
        "//tink/internal:fips_utils",
        "//tink/mac:hmac_key_manager",
        "//tink/mac:mac_wrapper",
        "//tink/mac/internal:chunked_mac_wrapper",
        "//tink/prf:hmac_prf_key_manager",
        "//tink/prf:prf_set_wrapper",
        "//tink/signature:ecdsa_sign_key_manager",
        "//tink/signature:ecdsa_verify_key_manager",
        "//tink/signature:public_key_sign_wrapper",
        "//tink/signature:public_key_verify_wrapper",
        "//tink/signature:rsa_ssa_pkcs1_sign_key_manager",
        "//tink/signature:rsa_ssa_pkcs1_verify_key_manager",
        "//tink/signature:rsa_ssa_pss_sign_key_manager",
        "//tink/signature:rsa_ssa_pss_verify_key_manager",
        "@com_google_absl//absl/log:check",
    ],
)

cc_library(
    name = "key_gen_fips_140_2",
    srcs = ["key_gen_fips_140_2.cc"],
    hdrs = ["key_gen_fips_140_2.h"],
    include_prefix = "tink/config",
    visibility = ["//visibility:public"],
    deps = [
        "//tink:key_gen_configuration",
        "//tink/aead:aes_ctr_hmac_aead_key_manager",
        "//tink/aead:aes_gcm_key_manager",
        "//tink/internal:fips_utils",
        "//tink/internal:key_gen_configuration_impl",
        "//tink/mac:hmac_key_manager",
        "//tink/prf:hmac_prf_key_manager",
        "//tink/signature:ecdsa_sign_key_manager",
        "//tink/signature:ecdsa_verify_key_manager",
        "//tink/signature:rsa_ssa_pkcs1_sign_key_manager",
        "//tink/signature:rsa_ssa_pkcs1_verify_key_manager",
        "//tink/signature:rsa_ssa_pss_sign_key_manager",
        "//tink/signature:rsa_ssa_pss_verify_key_manager",
        "@com_google_absl//absl/log:check",
    ],
)

cc_library(
    name = "v0",
    srcs = ["v0.cc"],
    hdrs = ["v0.h"],
    include_prefix = "tink/config",
    tags = ["requires_boringcrypto_update"],
    deps = [
        "//tink:configuration",
        "//tink/aead/internal:config_v0",
        "//tink/daead/internal:config_v0",
        "//tink/hybrid/internal:config_v0",
        "//tink/internal:configuration_impl",
        "//tink/mac/internal:config_v0",
        "//tink/prf/internal:config_v0",
        "//tink/signature/internal:config_v0",
        "//tink/streamingaead/internal:config_v0",
        "@com_google_absl//absl/log:absl_check",
    ],
)

cc_library(
    name = "key_gen_v0",
    srcs = ["key_gen_v0.cc"],
    hdrs = ["key_gen_v0.h"],
    include_prefix = "tink/config",
    tags = ["requires_boringcrypto_update"],
    deps = [
        "//tink:key_gen_configuration",
        "//tink/aead/internal:key_gen_config_v0",
        "//tink/daead/internal:key_gen_config_v0",
        "//tink/hybrid/internal:key_gen_config_v0",
        "//tink/mac/internal:key_gen_config_v0",
        "//tink/prf/internal:key_gen_config_v0",
        "//tink/signature/internal:key_gen_config_v0",
        "//tink/streamingaead/internal:key_gen_config_v0",
        "@com_google_absl//absl/log:absl_check",
    ],
)

# tests

cc_test(
    name = "tink_config_test",
    size = "small",
    srcs = ["tink_config_test.cc"],
    deps = [
        ":tink_config",
        "//tink:aead",
        "//tink:deterministic_aead",
        "//tink:hybrid_decrypt",
        "//tink:hybrid_encrypt",
        "//tink:mac",
        "//tink:public_key_sign",
        "//tink:public_key_verify",
        "//tink:registry",
        "//tink:streaming_aead",
        "//tink/aead:aes_gcm_key_manager",
        "//tink/util:status",
        "//tink/util:test_matchers",
        "@com_google_absl//absl/status",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "config_util_test",
    size = "small",
    srcs = ["config_util_test.cc"],
    deps = [
        ":config_util",
        "//proto:config_cc_proto",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "tink_fips_test",
    size = "small",
    srcs = ["tink_fips_test.cc"],
    tags = ["fips"],
    deps = [
        ":tink_fips",
        "//tink:registry",
        "//tink/aead:aead_config",
        "//tink/internal:fips_utils",
        "//tink/util:status",
        "//tink/util:test_matchers",
        "@boringssl//:crypto",
        "@com_google_absl//absl/status",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "global_registry_test",
    srcs = ["global_registry_test.cc"],
    deps = [
        ":global_registry",
        "//proto:aes_gcm_cc_proto",
        "//proto:tink_cc_proto",
        "//tink:core/key_type_manager",
        "//tink:core/template_util",
        "//tink:input_stream",
        "//tink:keyset_handle",
        "//tink:primitive_set",
        "//tink:primitive_wrapper",
        "//tink:registry",
        "//tink/util:status",
        "//tink/util:statusor",
        "//tink/util:test_matchers",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings:string_view",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "fips_140_2_test",
    srcs = ["fips_140_2_test.cc"],
    deps = [
        ":fips_140_2",
        ":key_gen_fips_140_2",
        "//tink:aead",
        "//tink:chunked_mac",
        "//tink:keyset_handle",
        "//tink:mac",
        "//tink:public_key_sign",
        "//tink:public_key_verify",
        "//tink/aead:aead_key_templates",
        "//tink/aead:aes_ctr_hmac_aead_key_manager",
        "//tink/aead:aes_gcm_key_manager",
        "//tink/internal:configuration_impl",
        "//tink/internal:fips_utils",
        "//tink/internal:key_type_info_store",
        "//tink/internal:keyset_wrapper_store",
        "//tink/mac:aes_cmac_key_manager",
        "//tink/mac:hmac_key_manager",
        "//tink/prf:hmac_prf_key_manager",
        "//tink/prf:prf_set",
        "//tink/signature:ecdsa_verify_key_manager",
        "//tink/signature:rsa_ssa_pkcs1_verify_key_manager",
        "//tink/signature:rsa_ssa_pss_verify_key_manager",
        "//tink/util:statusor",
        "//tink/util:test_matchers",
        "@com_google_absl//absl/status",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "key_gen_fips_140_2_test",
    srcs = ["key_gen_fips_140_2_test.cc"],
    deps = [
        ":key_gen_fips_140_2",
        "//tink:keyset_handle",
        "//tink/aead:aead_key_templates",
        "//tink/aead:aes_ctr_hmac_aead_key_manager",
        "//tink/aead:aes_gcm_key_manager",
        "//tink/internal:fips_utils",
        "//tink/internal:key_gen_configuration_impl",
        "//tink/internal:key_type_info_store",
        "//tink/mac:aes_cmac_key_manager",
        "//tink/mac:hmac_key_manager",
        "//tink/prf:hmac_prf_key_manager",
        "//tink/signature:ecdsa_verify_key_manager",
        "//tink/signature:rsa_ssa_pkcs1_verify_key_manager",
        "//tink/signature:rsa_ssa_pss_verify_key_manager",
        "//tink/util:statusor",
        "//tink/util:test_matchers",
        "@com_google_absl//absl/status",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "v0_test",
    srcs = ["v0_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":key_gen_v0",
        ":v0",
        "//tink:aead",
        "//tink:chunked_mac",
        "//tink:configuration",
        "//tink:deterministic_aead",
        "//tink:hybrid_decrypt",
        "//tink:hybrid_encrypt",
        "//tink:keyset_handle",
        "//tink:mac",
        "//tink:public_key_sign",
        "//tink:public_key_verify",
        "//tink:streaming_aead",
        "//tink/aead:aead_key_templates",
        "//tink/aead:aes_ctr_hmac_aead_key_manager",
        "//tink/aead:aes_eax_key_manager",
        "//tink/aead:aes_gcm_key_manager",
        "//tink/aead:aes_gcm_siv_key_manager",
        "//tink/aead:xchacha20_poly1305_key_manager",
        "//tink/daead:aes_siv_key_manager",
        "//tink/hybrid:ecies_aead_hkdf_public_key_manager",
        "//tink/hybrid/internal:hpke_public_key_manager",
        "//tink/internal:configuration_impl",
        "//tink/internal:key_gen_configuration_impl",
        "//tink/internal:key_type_info_store",
        "//tink/internal:keyset_wrapper_store",
        "//tink/mac:aes_cmac_key_manager",
        "//tink/mac:hmac_key_manager",
        "//tink/prf:aes_cmac_prf_key_manager",
        "//tink/prf:hkdf_prf_key_manager",
        "//tink/prf:hmac_prf_key_manager",
        "//tink/prf:prf_set",
        "//tink/signature:ecdsa_verify_key_manager",
        "//tink/signature:ed25519_verify_key_manager",
        "//tink/signature:rsa_ssa_pkcs1_verify_key_manager",
        "//tink/signature:rsa_ssa_pss_verify_key_manager",
        "//tink/streamingaead:aes_ctr_hmac_streaming_key_manager",
        "//tink/streamingaead:aes_gcm_hkdf_streaming_key_manager",
        "//tink/util:statusor",
        "//tink/util:test_matchers",
        "@googletest//:gtest_main",
    ],
)
