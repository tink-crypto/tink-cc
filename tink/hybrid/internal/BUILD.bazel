package(default_visibility = ["//:__subpackages__"])

licenses(["notice"])

cc_library(
    name = "hpke_context",
    srcs = ["hpke_context.cc"],
    hdrs = ["hpke_context.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    visibility = ["//visibility:public"],
    deps = [
        ":hpke_context_boringssl",
        ":hpke_util",
        "//tink:secret_data",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hpke_context_boringssl",
    srcs = ["hpke_context_boringssl.cc"],
    hdrs = ["hpke_context_boringssl.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_util",
        ":hpke_util_boringssl",
        "//tink/internal:call_with_core_dump_protection",
        "//tink/internal:dfsan_forwarders",
        "//tink/internal:ssl_unique_ptr",
        "//tink/subtle:subtle_util",
        "//tink/util:secret_data",
        "//tink/util:status",
        "//tink/util:statusor",
        "@boringssl//:crypto",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hpke_decrypt",
    srcs = ["hpke_decrypt.cc"],
    hdrs = ["hpke_decrypt.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_context",
        ":hpke_util",
        "//proto:hpke_cc_proto",
        "//tink:hybrid_decrypt",
        "//tink:insecure_secret_key_access",
        "//tink:partial_key_access",
        "//tink:secret_data",
        "//tink/hybrid:hpke_parameters",
        "//tink/hybrid:hpke_private_key",
        "//tink/util:secret_data",
        "//tink/util:statusor",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:string_view",
    ],
)

cc_library(
    name = "hpke_encrypt",
    srcs = ["hpke_encrypt.cc"],
    hdrs = ["hpke_encrypt.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_context",
        ":hpke_util",
        "//proto:hpke_cc_proto",
        "//tink:hybrid_encrypt",
        "//tink:partial_key_access",
        "//tink/hybrid:hpke_parameters",
        "//tink/hybrid:hpke_public_key",
        "//tink/util:statusor",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:string_view",
    ],
)

cc_library(
    name = "hpke_key_manager_util",
    srcs = ["hpke_key_manager_util.cc"],
    hdrs = ["hpke_key_manager_util.h"],
    include_prefix = "tink/hybrid/internal",
    deps = [
        "//proto:hpke_cc_proto",
        "//tink/util:status",
        "//tink/util:validation",
        "@com_google_absl//absl/status",
    ],
)

cc_library(
    name = "hpke_private_key_manager",
    srcs = ["hpke_private_key_manager.cc"],
    hdrs = ["hpke_private_key_manager.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_decrypt",
        ":hpke_key_manager_util",
        "//proto:hpke_cc_proto",
        "//proto:tink_cc_proto",
        "//tink:core/key_type_manager",
        "//tink:core/private_key_type_manager",
        "//tink:core/template_util",
        "//tink:hybrid_decrypt",
        "//tink:key_manager",
        "//tink/internal:ec_util",
        "//tink/internal:mlkem_util",
        "//tink/internal:ssl_unique_ptr",
        "//tink/internal:xwing_util",
        "//tink/subtle:common_enums",
        "//tink/util:constants",
        "//tink/util:secret_data",
        "//tink/util:status",
        "//tink/util:statusor",
        "//tink/util:validation",
        "@boringssl//:crypto",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hpke_public_key_manager",
    srcs = ["hpke_public_key_manager.cc"],
    hdrs = ["hpke_public_key_manager.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_encrypt",
        ":hpke_key_manager_util",
        "//proto:hpke_cc_proto",
        "//proto:tink_cc_proto",
        "//tink:core/key_type_manager",
        "//tink:core/template_util",
        "//tink:hybrid_encrypt",
        "//tink:key_manager",
        "//tink/util:constants",
        "//tink/util:errors",
        "//tink/util:protobuf_helper",
        "//tink/util:status",
        "//tink/util:statusor",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hpke_test_util",
    testonly = 1,
    srcs = ["hpke_test_util.cc"],
    hdrs = ["hpke_test_util.h"],
    include_prefix = "tink/hybrid/internal",
    deps = [
        ":hpke_util",
        "//proto:hpke_cc_proto",
        "//tink/util:statusor",
        "//tink/util:test_util",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hpke_util",
    srcs = ["hpke_util.cc"],
    hdrs = ["hpke_util.h"],
    include_prefix = "tink/hybrid/internal",
    deps = [
        "//proto:hpke_cc_proto",
        "//tink/internal:ec_util",
        "//tink/subtle:common_enums",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hpke_util_boringssl",
    srcs = ["hpke_util_boringssl.cc"],
    hdrs = ["hpke_util_boringssl.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_util",
        "//proto:hpke_cc_proto",
        "//tink/util:statusor",
        "@boringssl//:crypto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "test_hpke_context_boringssl",
    testonly = 1,
    srcs = ["test_hpke_context_boringssl.cc"],
    hdrs = ["test_hpke_context_boringssl.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_context_boringssl",
        ":hpke_util",
        ":hpke_util_boringssl",
        "//tink/internal:ssl_unique_ptr",
        "//tink/util:status",
        "//tink/util:statusor",
        "@boringssl//:crypto",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "config_v0",
    srcs = ["config_v0.cc"],
    hdrs = ["config_v0.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_decrypt",
        ":hpke_encrypt",
        ":hpke_private_key_manager",
        ":hpke_public_key_manager",
        "//tink:configuration",
        "//tink:hybrid_decrypt",
        "//tink:hybrid_encrypt",
        "//tink/hybrid:ecies_aead_hkdf_private_key_manager",
        "//tink/hybrid:ecies_aead_hkdf_public_key_manager",
        "//tink/hybrid:hpke_private_key",
        "//tink/hybrid:hpke_proto_serialization",
        "//tink/hybrid:hpke_public_key",
        "//tink/hybrid:hybrid_decrypt_wrapper",
        "//tink/hybrid:hybrid_encrypt_wrapper",
        "//tink/internal:configuration_impl",
        "//tink/util:status",
        "//tink/util:statusor",
        "@com_google_absl//absl/memory",
    ],
)

cc_library(
    name = "key_gen_config_v0",
    srcs = ["key_gen_config_v0.cc"],
    hdrs = ["key_gen_config_v0.h"],
    include_prefix = "tink/hybrid/internal",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_private_key_manager",
        ":hpke_public_key_manager",
        "//tink:key_gen_configuration",
        "//tink/hybrid:ecies_aead_hkdf_private_key_manager",
        "//tink/hybrid:ecies_aead_hkdf_public_key_manager",
        "//tink/internal:key_gen_configuration_impl",
        "//tink/util:status",
        "@com_google_absl//absl/memory",
    ],
)

# tests

cc_test(
    name = "hpke_context_test",
    size = "small",
    srcs = ["hpke_context_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_context",
        ":hpke_test_util",
        ":hpke_util",
        "//tink:secret_data",
        "//tink/util:secret_data",
        "//tink/util:test_matchers",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_context_boringssl_test",
    size = "small",
    srcs = ["hpke_context_boringssl_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_context_boringssl",
        ":hpke_test_util",
        ":hpke_util",
        ":test_hpke_context_boringssl",
        "//tink:secret_data",
        "//tink/util:secret_data",
        "//tink/util:test_matchers",
        "@boringssl//:crypto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_decrypt_test",
    size = "small",
    srcs = ["hpke_decrypt_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_decrypt",
        ":hpke_encrypt",
        ":hpke_test_util",
        "//proto:hpke_cc_proto",
        "//tink:hybrid_decrypt",
        "//tink:hybrid_encrypt",
        "//tink:insecure_secret_key_access",
        "//tink:partial_key_access",
        "//tink:restricted_data",
        "//tink:secret_data",
        "//tink/hybrid:hpke_parameters",
        "//tink/hybrid:hpke_private_key",
        "//tink/hybrid:hpke_public_key",
        "//tink/hybrid/internal/testing:hpke_test_vectors",
        "//tink/hybrid/internal/testing:hybrid_test_vectors",
        "//tink/util:secret_data",
        "//tink/util:test_matchers",
        "//tink/util:test_util",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_encrypt_test",
    size = "small",
    srcs = ["hpke_encrypt_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_decrypt",
        ":hpke_encrypt",
        ":hpke_test_util",
        ":hpke_util",
        "//proto:hpke_cc_proto",
        "//tink:hybrid_decrypt",
        "//tink:hybrid_encrypt",
        "//tink:partial_key_access",
        "//tink/hybrid:hpke_parameters",
        "//tink/hybrid:hpke_private_key",
        "//tink/hybrid:hpke_public_key",
        "//tink/hybrid/internal/testing:hpke_test_vectors",
        "//tink/hybrid/internal/testing:hybrid_test_vectors",
        "//tink/util:test_matchers",
        "//tink/util:test_util",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_key_manager_util_test",
    size = "small",
    srcs = ["hpke_key_manager_util_test.cc"],
    deps = [
        ":hpke_key_manager_util",
        ":hpke_test_util",
        "//proto:hpke_cc_proto",
        "//tink/util:status",
        "//tink/util:test_matchers",
        "@com_google_absl//absl/status",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_private_key_manager_test",
    size = "small",
    srcs = ["hpke_private_key_manager_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_encrypt",
        ":hpke_private_key_manager",
        "//proto:hpke_cc_proto",
        "//proto:tink_cc_proto",
        "//tink:hybrid_decrypt",
        "//tink:hybrid_encrypt",
        "//tink:key_status",
        "//tink:keyset_handle",
        "//tink/config:global_registry",
        "//tink/hybrid:hpke_config",
        "//tink/hybrid:hpke_proto_serialization",
        "//tink/hybrid:hybrid_config",
        "//tink/hybrid/internal/testing:hpke_test_vectors",
        "//tink/hybrid/internal/testing:hybrid_test_vectors",
        "//tink/subtle:hybrid_test_util",
        "//tink/util:statusor",
        "//tink/util:test_matchers",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_public_key_manager_test",
    size = "small",
    srcs = ["hpke_public_key_manager_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_public_key_manager",
        ":hpke_test_util",
        "//proto:hpke_cc_proto",
        "//proto:tink_cc_proto",
        "//tink/util:test_matchers",
        "@com_google_absl//absl/status",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_util_boringssl_test",
    size = "small",
    srcs = ["hpke_util_boringssl_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hpke_test_util",
        ":hpke_util",
        ":hpke_util_boringssl",
        "//proto:hpke_cc_proto",
        "//tink/util:test_matchers",
        "@boringssl//:crypto",
        "@com_google_absl//absl/status:statusor",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "hpke_util_test",
    size = "small",
    srcs = ["hpke_util_test.cc"],
    deps = [
        ":hpke_test_util",
        ":hpke_util",
        "//proto:hpke_cc_proto",
        "//tink/util:test_matchers",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "config_v0_test",
    srcs = ["config_v0_test.cc"],
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":config_v0",
        ":hpke_private_key_manager",
        ":hpke_test_util",
        ":key_gen_config_v0",
        "//proto:tink_cc_proto",
        "//tink:configuration",
        "//tink:hybrid_decrypt",
        "//tink:hybrid_encrypt",
        "//tink:key_gen_configuration",
        "//tink:key_status",
        "//tink:keyset_handle",
        "//tink/hybrid:ecies_aead_hkdf_private_key_manager",
        "//tink/hybrid:hybrid_key_templates",
        "//tink/hybrid/internal/testing:hpke_test_vectors",
        "//tink/hybrid/internal/testing:hybrid_test_vectors",
        "//tink/internal:configuration_impl",
        "//tink/internal:key_gen_configuration_impl",
        "//tink/internal:key_type_info_store",
        "//tink/internal:keyset_wrapper_store",
        "//tink/util:statusor",
        "//tink/util:test_matchers",
        "@googletest//:gtest_main",
    ],
)

cc_library(
    name = "ecies_aead_hkdf_dem_helper",
    srcs = ["ecies_aead_hkdf_dem_helper.cc"],
    hdrs = ["ecies_aead_hkdf_dem_helper.h"],
    include_prefix = "tink/hybrid/internal",
    deps = [
        "//proto:aes_ctr_cc_proto",
        "//proto:aes_ctr_hmac_aead_cc_proto",
        "//proto:aes_gcm_cc_proto",
        "//proto:aes_siv_cc_proto",
        "//proto:common_cc_proto",
        "//proto:hmac_cc_proto",
        "//proto:tink_cc_proto",
        "//proto:xchacha20_poly1305_cc_proto",
        "//tink:aead",
        "//tink:deterministic_aead",
        "//tink/aead:aes_ctr_hmac_aead_key_manager",
        "//tink/daead/subtle:aead_or_daead",
        "//tink/subtle:aes_gcm_boringssl",
        "//tink/subtle:aes_siv_boringssl",
        "//tink/subtle:xchacha20_poly1305_boringssl",
        "//tink/util:errors",
        "//tink/util:protobuf_helper",
        "//tink/util:secret_data",
        "//tink/util:status",
        "//tink/util:statusor",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings:string_view",
    ],
)

cc_test(
    name = "ecies_aead_hkdf_dem_helper_test",
    srcs = ["ecies_aead_hkdf_dem_helper_test.cc"],
    deps = [
        ":ecies_aead_hkdf_dem_helper",
        "//proto:aes_gcm_cc_proto",
        "//proto:aes_siv_cc_proto",
        "//proto:tink_cc_proto",
        "//tink/aead:aes_gcm_key_manager",
        "//tink/daead:aes_siv_key_manager",
        "//tink/daead/subtle:aead_or_daead",
        "//tink/util:secret_data",
        "//tink/util:status",
        "//tink/util:test_matchers",
        "//tink/util:test_util",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings:string_view",
        "@googletest//:gtest_main",
    ],
)
