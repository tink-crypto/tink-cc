package(
    default_testonly = 1,
    default_visibility = ["//:__subpackages__"],
)

licenses(["notice"])

cc_library(
    name = "hybrid_test_vectors",
    testonly = 1,
    hdrs = ["hybrid_test_vectors.h"],
    include_prefix = "tink/hybrid/internal/testing",
    deps = [
        "//tink/hybrid:hybrid_private_key",
        "@com_google_absl//absl/strings:string_view",
    ],
)

cc_library(
    name = "hpke_test_vectors",
    testonly = 1,
    srcs = ["hpke_test_vectors.cc"],
    hdrs = ["hpke_test_vectors.h"],
    include_prefix = "tink/hybrid/internal/testing",
    tags = ["requires_boringcrypto_update"],
    deps = [
        ":hybrid_test_vectors",
        "//tink:insecure_secret_key_access",
        "//tink:partial_key_access",
        "//tink:restricted_data",
        "//tink:secret_data",
        "//tink/hybrid:hpke_parameters",
        "//tink/hybrid:hpke_private_key",
        "//tink/hybrid:hpke_public_key",
        "//tink/util:secret_data",
        "//tink/util:test_util",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "ecies_aead_hkdf_test_vectors",
    testonly = 1,
    srcs = ["ecies_aead_hkdf_test_vectors.cc"],
    hdrs = ["ecies_aead_hkdf_test_vectors.h"],
    include_prefix = "tink/hybrid/internal/testing",
    deps = [
        ":hybrid_test_vectors",
        "//tink:big_integer",
        "//tink:ec_point",
        "//tink:insecure_secret_key_access",
        "//tink:partial_key_access",
        "//tink:restricted_big_integer",
        "//tink:restricted_data",
        "//tink/hybrid:ecies_parameters",
        "//tink/hybrid:ecies_private_key",
        "//tink/hybrid:ecies_public_key",
        "//tink/util:statusor",
        "//tink/util:test_util",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/types:optional",
    ],
)
